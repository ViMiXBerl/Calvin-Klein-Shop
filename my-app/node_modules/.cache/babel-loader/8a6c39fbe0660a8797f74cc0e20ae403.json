{"ast":null,"code":"var _jsxFileName = \"D:\\\\DIPLOM\\\\my-app\\\\src\\\\pages\\\\CardProduct\\\\CardProduct.tsx\";\nimport Header from \"modules/Header/Header\";\nimport { Row, Col, Image, ListGroup } from \"react-bootstrap\";\nimport products from \"products\"; // import { RouteComponentProps } from \"react-router\";\n// import { RouteParams } from \"pages/CardProduct/types\";\n// import { CardProductProps } from \"pages/CardProduct/types\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardProduct = ({\n  match\n}) => {\n  const product = products.find(prod => prod._vendorСode === match.params.vendorCode);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product === null || product === void 0 ? void 0 : product.image,\n          alt: product === null || product === void 0 ? void 0 : product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: $\", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_c = CardProduct;\nexport default CardProduct; // console.log(\n// \tprod._vendorСode === match.params.vendorCode,\n// \t\"CardProd is true\"\n// )\n\nvar _c;\n\n$RefreshReg$(_c, \"CardProduct\");","map":{"version":3,"sources":["D:/DIPLOM/my-app/src/pages/CardProduct/CardProduct.tsx"],"names":["Header","Row","Col","Image","ListGroup","products","CardProduct","match","product","find","prod","_vendorСode","params","vendorCode","image","name","rating","numReviews","price","description"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,SAA1B,QAAiD,iBAAjD;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;AACA;AACA;;;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2D;AAC9E,QAAMC,OAAO,GAAGH,QAAQ,CAACI,IAAT,CACdC,IAAD,IAAUA,IAAI,CAACC,WAAL,KAAqBJ,KAAK,CAACK,MAAN,CAAaC,UAD7B,CAAhB;AAIA,sBACC;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,GAAD;AAAA,8BACC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACC,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEL,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM,KAArB;AAA4B,UAAA,GAAG,EAAEN,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEO,IAA1C;AAAgD,UAAA,KAAK;AAArD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACC,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,OAAnB;AAAA,kCACC,QAAC,SAAD,CAAW,IAAX;AAAA,mCACC;AAAA,wBAAKP,OAAO,CAACO;AAAb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC,QAAC,SAAD,CAAW,IAAX;AAAA,mCACC,QAAC,MAAD;AACC,cAAA,KAAK,EAAEP,OAAO,CAACQ,MADhB;AAEC,cAAA,IAAI,EAAG,GAAER,OAAO,CAACS,UAAW;AAF7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJD,eAUC,QAAC,SAAD,CAAW,IAAX;AAAA,mCAAyBT,OAAO,CAACU,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVD,eAWC,QAAC,SAAD,CAAW,IAAX;AAAA,yCAA+BV,OAAO,CAACW,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAyBA,CA9BD;;KAAMb,W;AAgCN,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import Header from \"modules/Header/Header\";\r\nimport Text from \"components/Text/Text\";\r\nimport { Row, Col, Image, ListGroup, Card } from \"react-bootstrap\";\r\nimport products from \"products\";\r\n// import { RouteComponentProps } from \"react-router\";\r\n// import { RouteParams } from \"pages/CardProduct/types\";\r\n// import { CardProductProps } from \"pages/CardProduct/types\";\r\nimport { CardProductProps, RouteComponentProps } from \"pages/CardProduct/types\";\r\n\r\nconst CardProduct = ({ match }: RouteComponentProps<CardProductProps>): any => {\r\n\tconst product = products.find(\r\n\t\t(prod) => prod._vendorСode === match.params.vendorCode\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t<Image src={product?.image} alt={product?.name} fluid></Image>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={3}>\r\n\t\t\t\t\t<ListGroup variant='flush'>\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<h2>{product.name}</h2>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t<Rating\r\n\t\t\t\t\t\t\t\tvalue={product.rating}\r\n\t\t\t\t\t\t\t\ttext={`${product.numReviews} reviews`}\r\n\t\t\t\t\t\t\t></Rating>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t<ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n\t\t\t\t\t\t<ListGroup.Item>Description: ${product.description}</ListGroup.Item>\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CardProduct;\r\n\r\n// console.log(\r\n// \tprod._vendorСode === match.params.vendorCode,\r\n// \t\"CardProd is true\"\r\n// )\r\n"]},"metadata":{},"sourceType":"module"}