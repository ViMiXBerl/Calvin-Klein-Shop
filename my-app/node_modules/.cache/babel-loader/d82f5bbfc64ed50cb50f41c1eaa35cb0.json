{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst rootReducer = combineReducers({});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/DIPLOM/my-app/src/store/store.ts"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","rootReducer","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC,EAAD,CAAnC;AAEA,MAAMK,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAEA,MAAMK,KAAK,GAAGR,WAAW,CACxBK,WADwB,EAExBC,YAFwB,EAGxBF,mBAAmB,CAACF,eAAe,CAACC,KAAD,CAAhB,CAHK,CAAzB;AAMA,eAAeK,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}